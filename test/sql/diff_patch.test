# name: test/sql/diff_patch.test
# description: test diff_patch extension
# group: [sql]

# Before we load the extension, this will fail
statement error
SELECT diff_patch('hello', '[ ["=", 5] ]');
----
Catalog Error: Scalar Function with name diff_patch does not exist!

# Require statement will ensure this test is run with this extension loaded
require diff_patch

# Confirm the extension works
query I
SELECT diff_patch('hello', '[ ["=", 5], ["+", "!"] ]');
----
hello!

query I
SELECT diff_patch('abcdef', '[ ["=", 2], ["+", "XY"], ["-", 3], ["=", 1] ]');
----
abXYf

query I
SELECT diff_patch('spaghetti', '[ ["-", 4], ["+", "a"], ["=", 3] ]');
----
ahet

query I
SELECT diff_patch('data', '[ ["?", 2], ["=", 2] ]');
----
da

query I
SELECT diff_patch('x', '"oops"');
----
x

# Generate a patch and apply it back
query I
SELECT diff_patch('h√©llo', make_patch('h√©llo', 'h√©X!lo'));
----
h√©X!lo

# patch_len: counts UTF-8 code points from '=' and '+'
query I
SELECT patch_len('[ ["=", 6], ["+", "the "], ["=", 5] ]');
----
15

query I
SELECT patch_len('[ ["=", 2], ["+", "üôÇ"], ["=", 3] ]');
----
6

# make_patch: basic ASCII insert
query I
SELECT make_patch('Hello world', 'Hello the world');
----
[["=",6],["+","the "],["=",5]]

# make_patch + patch_len should equal new string length (code points)
query I
SELECT patch_len(make_patch('h√©llo', 'h√©X!lo'));
----
6

# Round-trip with ASCII
query I
SELECT diff_patch('Hello world', make_patch('Hello world', 'Hello the world'));
----
Hello the world
